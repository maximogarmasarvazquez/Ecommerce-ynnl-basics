generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  client
  admin
}

model User {
  id         String    @id @default(uuid())
  name       String
  email      String    @unique
  password   String
  role       UserRole
  created_at DateTime  @default(now())
  orders     Order[]
  addresses  Address[]
}

model Address {
  id         String   @id @default(uuid())
  street     String
  city       String
  province   String
  postalCode String
  country    String
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String
  created_at DateTime @default(now())
}

model Category {
  id       String    @id @default(uuid())
  name     String
  products Product[]
}

model Product {
  id          String         @id @default(uuid())
  name        String
  description String?
  price       Float
  image_url   String?
  stock       Int
  created_at  DateTime       @default(now())
  category    Category?      @relation(fields: [category_id], references: [id])
  category_id String?
  sizes       ProductSize[]
  orderItems  OrderItem[]
}

model ProductSize {
  id         String   @id @default(uuid())
  size       String
  stock      Int
  product    Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)
  product_id String
}

model Order {
  id             String       @id @default(uuid())
  status         String       @default("pending")
  total          Float
  payment_method String?
  created_at     DateTime     @default(now())
  user           User         @relation(fields: [user_id], references: [id])
  user_id        String
  items          OrderItem[]
}

model OrderItem {
  id         String   @id @default(uuid())
  quantity   Int
  size       String
  unit_price Float
  product    Product  @relation(fields: [product_id], references: [id])
  product_id String
  order      Order    @relation(fields: [order_id], references: [id], onDelete: Cascade)
  order_id   String
}

model Discount {
  id         String   @id @default(uuid())
  code       String   @unique
  percentage Int
  active     Boolean  @default(true)
  expires_at DateTime?
}
